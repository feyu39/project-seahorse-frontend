{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"progress\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center mt-2\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"Robot moving to location 1\"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"ml-auto\"\n}, \"Robot moving to location 2\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"progress-bar\",\n    style: _normalizeStyle({\n      width: $data.progressWidth\n    })\n  }, null, 4 /* STYLE */)]), _hoisted_2]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","style","_normalizeStyle","width","$data","progressWidth","_hoisted_2"],"sources":["/home/fyu/Documents/Project Seahorse/project-seahorse-frontend/src/views/ProgressBar.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"progress\">\n        <div class=\"progress-bar\" :style=\"{ width: progressWidth }\"></div>\n      </div>\n      <div class=\"text-center mt-2\">\n        <span>Robot moving to location 1</span>\n        <span class=\"ml-auto\">Robot moving to location 2</span>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        progressWidth: '50%',\n      };\n    },\n    methods: {\n  async fetchData() {\n    axios.get('http://127.0.0.1:5000/location')\n      .then(response => {\n        if (response.data['location'] === 1) {\n          this.progressWidth = '100%';\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  },\n},\ncreated() {\n  this.fetchData();\n  // Call the fetchData method every 5 seconds (adjust the interval as needed)\n  setInterval(this.fetchData, 5000);\n},\n  };\n  </script>\n  \n  <style>\n  .progress {\n    height: 20px;\n    margin-bottom: 10px;\n    overflow: hidden;\n    background-color: #f5f5f5;\n    border-radius: 4px;\n  }\n  \n  .progress-bar {\n    transition: width 0.6s ease;\n    height: 100%;\n    background-color: #007bff;\n  }\n  </style>"],"mappings":";;EAEWA,KAAK,EAAC;AAAU;gCAGrBC,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAkB,I,aAC3BC,mBAAA,CAAuC,cAAjC,4BAA0B,G,aAChCA,mBAAA,CAAuD;EAAjDD,KAAK,EAAC;AAAS,GAAC,4BAA0B,E;;;uBANpDE,mBAAA,CAQM,cAPJD,mBAAA,CAEM,OAFNE,UAEM,GADJF,mBAAA,CAAkE;IAA7DD,KAAK,EAAC,cAAc;IAAEI,KAAK,EAAAC,eAAA;MAAAC,KAAA,EAAWC,KAAA,CAAAC;IAAa;6BAE1DC,UAGM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}